[app:main]
use = egg:openprocurement.chronograph

couchdb.db_name = ${options['couchdb_db']}
{% if 'username' in parts['couchdb.ini'] %}couchdb.admin_url = http://${parts['couchdb.ini'].username+':'+parts['couchdb.ini'].password+'@' if 'username' in parts['couchdb.ini'] else ''}${parts['couchdb.ini'].host}:${parts['couchdb.ini'].port}/{% end %}
{% if 'couchdb_url' in options %}couchdb.url = ${options['couchdb_url']}{% end %}
{% if 'couchdb_url' not in options %}couchdb.url = http://${parts['couchdb.ini'].host}:${parts['couchdb.ini'].port}/{% end %}
api.url = ${options['api_url']}
{% if 'api_token' in options %}api.token = ${options['api_token']}{% end %}
callback.url = ${options['callback_url']}
jobstore_db = ${options['jobstore_db']}

pyramid.reload_templates = ${options['debug']}
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = ${options['debug']}
pyramid.default_locale_name = en
exclog.extra_info = true

filter-with = request_id

[filter:request_id]
paste.filter_factory = request_id_middleware.middleware:RequestIdMiddleware.factory
env_request_id = REQUEST_ID
resp_header_request_id = X-Request-ID

[server:main]
use = egg:chaussette
host = 0.0.0.0
port = 6544
backend = gevent

# Begin logging configuration

[loggers]
keys = root, openprocurement_chronograph, apscheduler, requests${',exc_logger' if 'exc_logger' in options else ''}

[handlers]
keys = console${',loggly' if 'loggly' in options else ''}${',journal' if 'journal' in options else ''}

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console${',loggly' if 'loggly' in options else ''}

[logger_openprocurement_chronograph]
level = DEBUG
handlers = {% if 'journal' in options %}journal{% end %}
qualname = openprocurement.chronograph

[logger_apscheduler]
level = WARNING
handlers =
qualname = apscheduler

[logger_requests]
level = WARNING
handlers =
qualname = requests

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic
{% if 'exc_logger' in options %}
[logger_exc_logger]
level = ERROR
handlers = {% if 'journal' in options %}journal{% end %}
qualname = exc_logger
propagate = 0
{% end %}
{% if 'loggly' in options %}
[handler_loggly]
class=loggly.handlers.HTTPSHandler
args=('https://logs-01.loggly.com/inputs/${options['loggly']}/tag/python,chronograph/','POST')
{% end %}
{% if 'journal' in options %}
[handler_journal]
class = ExtendedJournalHandler.ExtendedJournalHandler
args = ()
{% end %}
[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
